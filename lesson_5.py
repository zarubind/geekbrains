# 1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем. Об
# окончании ввода данных свидетельствует пустая строка.

with open('1.txt', 'w') as file:
    i = input()
    while i != '':
        file.write(i + '\n')
        i = input()

# 2. Создать текстовый файл (не программно), сохранить в нем несколько строк, выполнить подсчет количества строк,
# количества слов в каждой строке.

with open('2.txt') as file:
    sum = 0
    for string in file:
        sum += 1
        print(f'{sum} строка, слов: {len(string.split())}')
    print('Количество строк:', sum)

# 3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов.
# Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников. Выполнить подсчет
# средней величины дохода сотрудников.

with open('3.txt') as file:
    sum, count = 0, 0
    for string in file:
        string = string.split()
        sum += int(string[1])
        count += 1
        if int(string[1]) < 20000:
            print(string[0])
    print('Average salary:', sum/count)

# 4. Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные. При этом английские
# числительные должны заменяться на русские. Новый блок строк должен записываться в новый текстовый файл.

numbers = {'One': 'Один',
           'Two': 'Два',
           'Three': 'Три',
           'Four': 'Четыре'}

with open('4.txt') as file_in, open('4_.txt', 'w') as file_out:
    for string in file_in:
        string = string.split()
        file_out.write(f'{numbers[string[0]]} {string[1]} {string[2]}\n')

# 5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами. Программа
# должна подсчитывать сумму чисел в файле и выводить ее на экран.

numbers = [11, 22, 33, 44, 555]
sum = 0

with open('5.txt', 'w') as file:
    for var in numbers:
        file.write(f'{var} ')

with open('5.txt') as file:
    string = file.read().split()
    for var in string:
        sum += int(var)

print('Amount:', sum)

# 6. Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и наличие
# лекционных, практических и лабораторных занятий по этому предмету и их количество. Важно, чтобы для каждого предмета
# не обязательно были все типы занятий. Сформировать словарь, содержащий название предмета и общее количество занятий по
# нему. Вывести словарь на экран.
#
# Примеры строк файла:
# Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
#
# Пример словаря:
# {"Информатика”: 170, "Физика”: 40, "Физкультура”: 30}

import re

my_dict = {}
with open('6.txt') as file:
    for string in file:
        sum = 0
        predmet = re.search(r'(\w+):(.*)', string)
        for var in re.finditer(r'D*(\d+)', predmet[2]):
            sum += int(var[1])
        my_dict[predmet[1]] = sum
    print(my_dict)

# 7. Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме: название, форма
# собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. Если фирма получила
# убытки, в расчет средней прибыли ее не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
# Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
# Пример списка: [{"firm_1”: 5000, "firm_2”: 3000, "firm_3”: 1000}, {"average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
# Подсказка: использовать менеджеры контекста.

import json

my_list = []
my_dict = {}
with open('7.txt') as file:
    sum, count = 0, 0
    for string in file:
        string = string.split()
        my_dict[string[0]] = int(string[2]) - int(string[3])
        if my_dict[string[0]] > 0:
            count += 1
            sum += my_dict[string[0]]
        average = {'average_profit': sum/count}
        my_list = [my_dict, average]

print(my_list)

with open('7.json', 'w') as file:
    json.dump(my_list, file)
